import { useState, useEffect, useCallback } from 'react';
import * as tf from '@tensorflow/tfjs';

export function useWebSocketTraining(modelManager) {
  const [socket, setSocket] = useState(null);
    const [trainingStatus, setTrainingStatus] = useState('idle');
      const [modelPerformance, setModelPerformance] = useState(null);
        const [queueSize, setQueueSize] = useState(0);

          const connect = useCallback(() => {
              const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
                  const ws = new WebSocket(`${protocol}//${window.location.host}/api/ws-training`);
                      
                          ws.onopen = () => {
                                setSocket(ws);
                                      setTrainingStatus('connected');
                                          };

                                              ws.onmessage = async (event) => {
                                                    const data = JSON.parse(event.data);
                                                          
                                                                if (data.type === 'model_update') {
                                                                        setModelPerformance({
                                                                                  accuracy: data.accuracy,
                                                                                            loss: data.loss,
                                                                                                      timestamp: new Date().toISOString()
                                                                                                              });
                                                                                                                      
                                                                                                                              // Update local model
                                                                                                                                      try {
                                                                                                                                                const model = await tf.loadLayersModel(data.modelPath);
                                                                                                                                                          await modelManager.saveModel(model, {
                                                                                                                                                                      description: 'Real-time update',
                                                                                                                                                                                  metrics: { accuracy: data.accuracy, loss: data.loss }
                                                                                                                                                                                            });
                                                                                                                                                                                                    } catch (error) {
                                                                                                                                                                                                              console.error('Model update failed:', error);
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                        if (data.type === 'queue_update') {
                                                                                                                                                                                                                                                setQueueSize(data.size);
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                          };

                                                                                                                                                                                                                                                              ws.onclose = () => {
                                                                                                                                                                                                                                                                    setTrainingStatus('disconnected');
                                                                                                                                                                                                                                                                          setTimeout(connect, 5000); // Reconnect after 5 seconds
                                                                                                                                                                                                                                                                              };

                                                                                                                                                                                                                                                                                  ws.onerror = (error) => {
                                                                                                                                                                                                                                                                                        console.error('WebSocket error:', error);
                                                                                                                                                                                                                                                                                            };

                                                                                                                                                                                                                                                                                                return () => ws.close();
                                                                                                                                                                                                                                                                                                  }, [modelManager]);

                                                                                                                                                                                                                                                                                                    useEffect(() => {
                                                                                                                                                                                                                                                                                                        const cleanup = connect();
                                                                                                                                                                                                                                                                                                            return () => {
                                                                                                                                                                                                                                                                                                                  if (cleanup) cleanup();
                                                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                                                        }, [connect]);

                                                                                                                                                                                                                                                                                                                          const submitTrainingData = useCallback((inputs, label) => {
                                                                                                                                                                                                                                                                                                                              if (socket && socket.readyState === WebSocket.OPEN) {
                                                                                                                                                                                                                                                                                                                                    socket.send(JSON.stringify({
                                                                                                                                                                                                                                                                                                                                            type: 'new_training_data',
                                                                                                                                                                                                                                                                                                                                                    payload: { inputs, label }
                                                                                                                                                                                                                                                                                                                                                          }));
                                                                                                                                                                                                                                                                                                                                                                setTrainingStatus('queued');
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                      }, [socket]);

                                                                                                                                                                                                                                                                                                                                                                        return {
                                                                                                                                                                                                                                                                                                                                                                            socket,
                                                                                                                                                                                                                                                                                                                                                                                trainingStatus,
                                                                                                                                                                                                                                                                                                                                                                                    modelPerformance,
                                                                                                                                                                                                                                                                                                                                                                                        queueSize,
                                                                                                                                                                                                                                                                                                                                                                                            submitTrainingData
                                                                                                                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                                                                                                                              }